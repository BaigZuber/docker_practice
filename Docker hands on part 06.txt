									DOCKER Hands on Lab 06
						        Task List: Docker Image Creation and Deployment



1. Create Directories
   - Establish two directories named "DHUB" and "AWSECR."
 Ans.
root@DESKTOP-1RT156R:~# mkdir AWSECR
root@DESKTOP-1RT156R:~# mkdir DHUB
root@DESKTOP-1RT156R:~# ls
AWSECR  Dockerfile  custom-index.html  git_repo1  lenovo       project   project3  project_clone  project_lan1  tmp            zuber.tar.gz
DHUB    clone       dell





================================================================================

2. Dockerfile Creation:
   - Develop two Dockerfiles to construct custom images with the following specifications:
     - Base image: Ubuntu
     - Install packages: httpd
     - Add "I am from Docker Hub" to the index.html file for DHUB directory and "I am from ECR" for AWSECR directory.
     - Set environment variable ENV_NAME=DHUB for the DHUB directory and ENV_NAME=AWSECR for the AWSECR directory.
  - Start http service using ENTRYPOINT 
  -  Expose port 80.
 Ans.
root@DESKTOP-1RT156R:~#
root@DESKTOP-1RT156R:~# cd AWSECR/
root@DESKTOP-1RT156R:~/AWSECR# ls
root@DESKTOP-1RT156R:~/AWSECR# vi Dockerfile
root@DESKTOP-1RT156R:~/AWSECR# cat Dockerfile
FROM ubuntu
RUN apt-get update && apt-get install -y apache2
RUN echo "I am from ECR" > /var/www/html/index.html
ENV ENV_NAME=AWSECR
EXPOSE 80
ENTRYPOINT ["apache2ctl", "-D", "FOREGROUND"]
root@DESKTOP-1RT156R:~/AWSECR# cd ..
root@DESKTOP-1RT156R:~# cd DHUB/
root@DESKTOP-1RT156R:~/DHUB# vi Dockerfile
root@DESKTOP-1RT156R:~/DHUB# cat Dockerfile
FROM ubuntu
RUN apt-get update && apt-get install -y apache2
RUN echo "I am from Docker Hub" > /var/www/html/index.html
ENV ENV_NAME=DHUB
EXPOSE 80
ENTRYPOINT ["apache2ctl", "-D", "FOREGROUND"]
root@DESKTOP-1RT156R:~/DHUB# cd ..
root@DESKTOP-1RT156R:~#





================================================================================


3. Build Custom Images:
   - Utilize the docker build command to build the custom images.
   - List all available images using docker images.
 Ans.
root@DESKTOP-1RT156R:~# cd AWSECR/
root@DESKTOP-1RT156R:~/AWSECR# docker image build -t my_awscer_image .
[+] Building 25.5s (7/7) FINISHED                                                                                                    docker:default
 => [internal] load build definition from Dockerfile                                                                                           0.0s
 => => transferring dockerfile: 228B                                                                                                           0.0s
 => [internal] load .dockerignore                                                                                                              0.1s
 => => transferring context: 2B                                                                                                                0.0s
 => [internal] load metadata for docker.io/library/ubuntu:latest                                                                               0.0s
 => [1/3] FROM docker.io/library/ubuntu                                                                                                        0.0s
 => [2/3] RUN apt-get update && apt-get install -y apache2                                                                                    23.3s
 => [3/3] RUN echo "I am from ECR" > /var/www/html/index.html                                                                                  0.7s
 => exporting to image                                                                                                                         1.3s
 => => exporting layers                                                                                                                        1.3s
 => => writing image sha256:ea256e615e41856fa451d9bd53783dde820667c3ba58b3f5ab5e781ebae40412                                                   0.0s
 => => naming to docker.io/library/my_awscer_image                                                                                             0.0s
root@DESKTOP-1RT156R:~/AWSECR# cd ..
root@DESKTOP-1RT156R:~# cd DHUB/
root@DESKTOP-1RT156R:~/DHUB# docker image build -t my_dhub_image .
[+] Building 0.7s (7/7) FINISHED                                                                                                     docker:default
 => [internal] load build definition from Dockerfile                                                                                           0.0s
 => => transferring dockerfile: 233B                                                                                                           0.0s
 => [internal] load .dockerignore                                                                                                              0.0s
 => => transferring context: 2B                                                                                                                0.0s
 => [internal] load metadata for docker.io/library/ubuntu:latest                                                                               0.0s
 => [1/3] FROM docker.io/library/ubuntu                                                                                                        0.0s
 => CACHED [2/3] RUN apt-get update && apt-get install -y apache2                                                                              0.0s
 => [3/3] RUN echo "I am from Docker Hub" > /var/www/html/index.html                                                                           0.4s
 => exporting to image                                                                                                                         0.1s
 => => exporting layers                                                                                                                        0.0s
 => => writing image sha256:f51ec734d7d41eafd3b182a69c129259638fafe4c76335a19c987dd6b315902a                                                   0.0s
 => => naming to docker.io/library/my_dhub_image                                                                                               0.0s
root@DESKTOP-1RT156R:~/DHUB# cd ..
root@DESKTOP-1RT156R:~# 
root@DESKTOP-1RT156R:~# docker image ls
REPOSITORY                           TAG       IMAGE ID       CREATED         SIZE
my_dhub_image                        latest    f51ec734d7d4   4 minutes ago   250MB
my_awscer_image                      latest    ea256e615e41   5 minutes ago   250MB
baigzuber/my_docker_repo             latest    c51b8dc8d670   2 hours ago     187MB
cache-image1                         latest    2152522f9cd2   8 days ago      584MB
cache-image                          latest    2152522f9cd2   8 days ago      584MB
ubuntu                               latest    265f1980393a   10 days ago     132MB
baigzuber/zuber-cloudethix-busybox   v2        9211bbaa0dbd   4 weeks ago     4.26MB
busybox                              latest    9211bbaa0dbd   4 weeks ago     4.26MB
ubuntu                               22.04     174c8c134b2a   5 weeks ago     77.9MB
httpd                                latest    6fd77d7e5eb7   3 months ago    167MB
root@DESKTOP-1RT156R:~#




================================================================================


4. Push Images to Repositories:
   - Push the Docker image to Docker Hub.
   - Push the Docker image to AWS ECR.
 Ans.
root@DESKTOP-1RT156R:~# docker image ls
REPOSITORY                           TAG       IMAGE ID       CREATED        SIZE
my_dhub_image                        latest    f51ec734d7d4   3 days ago     250MB
my_awscer_image                      latest    ea256e615e41   3 days ago     250MB
baigzuber/my_docker_repo             latest    c51b8dc8d670   3 days ago     187MB
cache-image1                         latest    2152522f9cd2   12 days ago    584MB
cache-image                          latest    2152522f9cd2   12 days ago    584MB
ubuntu                               latest    265f1980393a   13 days ago    132MB
busybox                              latest    9211bbaa0dbd   5 weeks ago    4.26MB
baigzuber/zuber-cloudethix-busybox   v2        9211bbaa0dbd   5 weeks ago    4.26MB
ubuntu                               22.04     174c8c134b2a   5 weeks ago    77.9MB
httpd                                latest    6fd77d7e5eb7   3 months ago   167MB
root@DESKTOP-1RT156R:~# docker image tag my_dhub_image:latest baigzuber/docker_app_images:v1
root@DESKTOP-1RT156R:~# docker image tag my_awscer_image:latest baigzuber/docker_app_images:v2

root@DESKTOP-1RT156R:~# docker image push baigzuber/docker_app_images:v1
The push refers to repository [docker.io/baigzuber/docker_app_images]
7411a58d678a: Pushed
63f3d6f73dca: Pushed
5c1bc004bc1d: Pushed
a1360aae5271: Mounted from library/ubuntu
v1: digest: sha256:6acd913dc5470e1ead3cd33e8774d25ae174510b4408a40cf412b786ec308ec4 size: 1160

root@DESKTOP-1RT156R:~# docker image push baigzuber/docker_app_images:v2
The push refers to repository [docker.io/baigzuber/docker_app_images]
c0bfcdd000c2: Pushed
63f3d6f73dca: Layer already exists
5c1bc004bc1d: Layer already exists
a1360aae5271: Layer already exists
v2: digest: sha256:2be151c1d5ab374e0da9025aad204585520899694b53123beec0530bfdaec020 size: 1160


root@DESKTOP-1RT156R:~# aws configure
AWS Access Key ID [****************4XVI]: AKIARSWTRM2O55EW7XKK
AWS Secret Access Key [****************KRZP]: 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
Default region name [us-east-1]:
Default output format [json]:

root@DESKTOP-1RT156R:~# aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 108891563677.dkr.ecr.us-east-1.amazonaws.com
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded

root@DESKTOP-1RT156R:~# docker tag my_awscer_image:latest 108891563677.dkr.ecr.us-east-1.amazonaws.com/my_local_repo:v1
root@DESKTOP-1RT156R:~# docker tag my_dhub_image:latest 108891563677.dkr.ecr.us-east-1.amazonaws.com/my_local_repo:v2
root@DESKTOP-1RT156R:~# docker image ls
REPOSITORY                                                   TAG       IMAGE ID       CREATED        SIZE
my_dhub_image                                                latest    f51ec734d7d4   3 days ago     250MB
108891563677.dkr.ecr.us-east-1.amazonaws.com/my_local_repo   v2        f51ec734d7d4   3 days ago     250MB
baigzuber/docker_app_images                                  v1        f51ec734d7d4   3 days ago     250MB
108891563677.dkr.ecr.us-east-1.amazonaws.com/my_local_repo   v1        ea256e615e41   3 days ago     250MB
baigzuber/docker_app_images                                  v2        ea256e615e41   3 days ago     250MB
my_awscer_image                                              latest    ea256e615e41   3 days ago     250MB
baigzuber/my_docker_repo                                     latest    c51b8dc8d670   3 days ago     187MB
cache-image1                                                 latest    2152522f9cd2   12 days ago    584MB
cache-image                                                  latest    2152522f9cd2   12 days ago    584MB
ubuntu                                                       latest    265f1980393a   13 days ago    132MB
baigzuber/zuber-cloudethix-busybox                           v2        9211bbaa0dbd   5 weeks ago    4.26MB
busybox                                                      latest    9211bbaa0dbd   5 weeks ago    4.26MB
ubuntu                                                       22.04     174c8c134b2a   5 weeks ago    77.9MB
httpd                                                        latest    6fd77d7e5eb7   3 months ago   167MB

root@DESKTOP-1RT156R:~# docker push 108891563677.dkr.ecr.us-east-1.amazonaws.com/my_local_repo:v2
The push refers to repository [108891563677.dkr.ecr.us-east-1.amazonaws.com/my_local_repo]
7411a58d678a: Pushed
63f3d6f73dca: Pushed
5c1bc004bc1d: Pushed
a1360aae5271: Pushed
v2: digest: sha256:e2494fd5405cdc9ac1c8b1a031268775c212b6ac3f4e76e905a7d87fac4270a2 size: 1160

root@DESKTOP-1RT156R:~# docker push 108891563677.dkr.ecr.us-east-1.amazonaws.com/my_local_repo:v1
The push refers to repository [108891563677.dkr.ecr.us-east-1.amazonaws.com/my_local_repo]
c0bfcdd000c2: Pushed
63f3d6f73dca: Layer already exists
5c1bc004bc1d: Layer already exists
a1360aae5271: Layer already exists
v1: digest: sha256:5a8a1df356e5e79005f3f96b0d67385721eb83fd926899ec73e76daf902603a8 size: 1160
root@DESKTOP-1RT156R:~#

We can check the repositories by :-
>>>>Amazon ECR ==> Private registry ==>Repositories ==>my_local_repo





================================================================================
 

5. Run Containers:

   - Execute a container from the Docker Hub image, naming it "I_AM_FROM_DHUB," and mapping host port 8081 to the container.
   #docker run -d -p 8081:80 --name I_AM_FROM_DHUB your_docker_hub_image
 
   - Execute a container from the AWS ECR image, naming it "I_AM_FROM_ECR," and mapping host port 8082 to the container.
   #docker run -d -p 8082:80 --name I_AM_FROM_ECR your_aws_ecr_image
 Ans.

root@DESKTOP-1RT156R:~# docker run -d -p 8081:80 --name I_AM_FROM_DHUB my_dhub_image
9dc678c7cd04c233e26cf32c47ca52e55ca594cbc5cc053ff0993adb01308159

root@DESKTOP-1RT156R:~# docker run -d -p 8082:80 --name I_AM_FROM_AWSCER my_awscer_image
dca46999ccd791f2ccd14e23e0545983352419cf9c6bdb35bfbe941c5aa3bd24

root@DESKTOP-1RT156R:~# docker container ls
CONTAINER ID   IMAGE             COMMAND                  CREATED              STATUS              PORTS
      NAMES
dca46999ccd7   my_awscer_image   "apache2ctl -D FOREG…"   About a minute ago   Up About a minute   0.0.0.0:8082->80/tcp, :::8082->80/tcp   I_AM_FROM_AWSCER
9dc678c7cd04   my_dhub_image     "apache2ctl -D FOREG…"   2 minutes ago        Up 2 minutes        0.0.0.0:8081->80/tcp, :::8081->80/tcp   I_AM_FROM_DHUB
root@DESKTOP-1RT156R:~#




================================================================================


6. Access Pages from Browser:
   - Open a web browser and access the pages:
     - For Docker Hub: http://localhost:8081
     - For AWS ECR: http://localhost:8082
 Ans.

Open a web browser and access the pages:-
     - For Docker Hub: http://localhost:8081

Result :-
		I am from Docker Hub
		
		
Open a web browser and access the pages:-
     - For Docker Hub: http://localhost:8082

Result :-
		I am from ECR
		
		

================================================================================


This task list guides you through the process of creating custom Docker images, pushing them to Docker Hub and AWS ECR, running containers, and accessing the pages from a browser.
